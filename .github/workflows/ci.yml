# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI
on:
  push:
    branches:
      - "main"
      - "release*"
      - "*-devel"
      - "*_devel"
      - "*-ci"
      - "*_ci"
  pull_request:  # Run on all pull requests
  workflow_dispatch:  # needed for "Run" button to show up in action
env:
  FORCE_COLOR: "1" # Make tools pretty.

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that if even if a build in the matrix fails, the others continue
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.8.19"  # Update this occasionally to stay up to date!
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Test with pytest
        env:
          COVERAGE_FILE: "coverage.${{ matrix.os }}.${{ matrix.python-version }}"
        run: |
          # Write coverage data files, namespaced using matrix info
          uv run pytest --numprocesses auto --cov=dysh
      - name: Upload coverage data
        # Upload only ubuntu results, since we are only running the coverage step on ubuntu
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: coverage.${{ matrix.os }}.${{ matrix.python-version }}
          path: "coverage.ubuntu-latest*"
  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
            version: "0.8.19"  # Update this occasionally to stay up to date!
            enable-cache: true
      - name: Install the project
        run: uv sync --all-extras --dev
      - uses: actions/download-artifact@v4
        with:
          pattern: coverage.*
          path: coverage-data
          merge-multiple: true
      - name: Combine coverage
        run: |
          uv run coverage combine coverage-data/coverage.*
          uv run coverage html --skip-covered --skip-empty

          # Report and write to summary.
          uv run coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

          # Report again and fail if under 100%.
          # coverage report --fail-under=100
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
