# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI
on:
  push:
    branches:
      - "main"
      - "release*"
      - "*-devel"
      - "*_devel"
      - "*-ci"
      - "*_ci"
  pull_request:  # Run on all pull requests
  workflow_dispatch:  # needed for "Run" button to show up in action
env:
  FORCE_COLOR: "1" # Make tools pretty.

jobs:
  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      # Ensure that if even if a build in the matrix fails, the others continue
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.19"  # Update this occasionally to stay up to date!
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - name: Install the project
        run: uv sync --locked --all-extras --dev --managed-python
      # ---- run tests WITHOUT coverage on most of the matrix ----
      - name: Test with pytest (no coverage)
        if: ${{ !(matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12') }}
        run: uv run pytest --numprocesses auto --dist=worksteal -q

      # ---- run tests WITH coverage on a single env ----
      - name: Test with pytest (coverage on ubuntu+3.12)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12' }}
        env:
          COVERAGE_FILE: "coverage.${{ matrix.os }}.${{ matrix.python-version }}"
        run: uv run pytest --numprocesses auto --dist=worksteal --cov=dysh --durations=20

      # ---- generate reports & upload ----
      - name: Coverage report & HTML
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12' }}
        run: |
          uv run coverage html --skip-covered --skip-empty
          uv run coverage xml
          echo "### Coverage Report" >> $GITHUB_STEP_SUMMARY
          uv run coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

      - name: Upload HTML report
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12' }}
        uses: actions/upload-artifact@v4
        with:
          name: html-report
          path: htmlcov
